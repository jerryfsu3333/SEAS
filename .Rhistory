scale_fill_grey(end = 0.7)+
scale_colour_grey(end = 0.7)+
theme_bw()+
labs(title = title)
g
}
x_new <- as.matrix(x) %*% directions_sir
hist_plot(x_new, y, 'SEAS-SIR')
hist_plot <- function(x, y, title){
if(!is.factor(y)){y <- factor(y)}
if(!is.null(dim(x))){x <- drop(x)}
df <- data.frame(component = x, class = y)
means <- sapply(unique(df$class), function(i){
mean(df$component[df$class==i])
})
means_df <- data.frame(means = means, class=unique(df$class))
g <- ggplot(df, aes(x=component, color = class, fill=class)) +
# geom_histogram(aes(y=..density..), bins = 50, position = 'identity', alpha=0.5) +
geom_density(alpha=0.3) +
geom_vline(data = means_df, aes(xintercept=means, color=class), linetype='dashed')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
)+
scale_fill_discrete(name="Type", breaks=c("1","2"), labels=c("Pork", "Beef"))+
scale_fill_grey(end = 0.7)+
scale_colour_grey(end = 0.7)+
theme_bw()+
labs(title = title)
g
}
hist_plot(x_new, y, 'SEAS-SIR')
y
levels(y)
levels(y) <- c("Pork", "Beef")
y
hist_plot(x_new, y, 'SEAS-SIR')
hist_plot <- function(x, y, title){
if(!is.factor(y)){y <- factor(y)}
if(!is.null(dim(x))){x <- drop(x)}
df <- data.frame(component = x, Type = y)
means <- sapply(unique(df$class), function(i){
mean(df$component[df$class==i])
})
means_df <- data.frame(means = means, class=unique(df$class))
g <- ggplot(df, aes(x=component, color = class, fill=class)) +
# geom_histogram(aes(y=..density..), bins = 50, position = 'identity', alpha=0.5) +
geom_density(alpha=0.3) +
geom_vline(data = means_df, aes(xintercept=means, color=class), linetype='dashed')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
)+
scale_fill_grey(end = 0.7)+
scale_colour_grey(end = 0.7)+
theme_bw()+
labs(title = title)
g
}
x_new <- as.matrix(x) %*% directions_sir
levels(y) <- c("Pork", "Beef")
hist_plot(x_new, y, 'SEAS-SIR')
hist_plot <- function(x, y, title){
if(!is.factor(y)){y <- factor(y)}
if(!is.null(dim(x))){x <- drop(x)}
df <- data.frame(component = x, Type = y)
means <- sapply(unique(df$Type), function(i){
mean(df$component[df$Type==i])
})
means_df <- data.frame(means = means, Type=unique(df$Type))
g <- ggplot(df, aes(x=component, color = Type, fill=Type)) +
# geom_histogram(aes(y=..density..), bins = 50, position = 'identity', alpha=0.5) +
geom_density(alpha=0.3) +
geom_vline(data = means_df, aes(xintercept=means, color=Type), linetype='dashed')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
)+
scale_fill_grey(end = 0.7)+
scale_colour_grey(end = 0.7)+
theme_bw()+
labs(title = title)
g
}
x_new <- as.matrix(x) %*% directions_sir
levels(y) <- c("Pork", "Beef")
hist_plot(x_new, y, 'SEAS-SIR')
x_new
y
x_new[1:10]
x_new[53:60]
x_new_lassosir <- as.matrix(x) %*% directions_lassosir
hist_plot(x_new_lassosir, y, 'Lasso-SIR')
x_new_lassosir
hist_plot(x_new_lassosir, y, 'Lasso-SIR')
x_new_lassosir <- -x_new_lassosir
hist_plot(x_new_lassosir, y, 'Lasso-SIR')
x_new_lasso <- as.matrix(x) %*% directions_lasso
hist_plot(x_new_lasso, y, 'Lasso')
x_new_lasso <- -x_new_lasso
hist_plot(x_new_lasso, y, 'Lasso')
x_new_rifle <- as.matrix(x) %*% directions_rifle
hist_plot(x_new_rifle, y, 'Rifle-SIR')
debugSource('~/Documents/GitHub/ssdr/R_rd/NIR_meat_cont2.R')
library(latex2exp)
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 1
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 1
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_intra <- -new_intra
new_pfc <- -new_pfc
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
i <- 2
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 2
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_intra <- -new_intra
new_pfc <- -new_pfc
library(latex2exp)
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 2
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
labs(title="Response versus the first component")+
# labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
library(latex2exp)
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 2
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_2^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_intra <- - new_intra
new_pfc <- -new_pfc
i <- 1
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
labs(title="Response versus the first component")+
# labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/output_pork')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/true_output_pork')
library(xtable)
library(ggplot2)
library(pracma)
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_nz <- lapply(output, '[[', 3)
boot_dist <- do.call(rbind, lapply(output, '[[', 4))
ord <- lapply(output, '[[', 5)
ord_est <- lapply(output, '[[', 6)
result1 <- apply(boot_dist, 2, function(x){mean(x, na.rm = TRUE)})
std1 <- apply(boot_dist, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_dist))*100})
result2 <- apply(boot_rank, 2, function(x){mean(x, na.rm = TRUE)})
std2 <- apply(boot_rank, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_rank))*100})
result3 <- apply(boot_s, 2, function(x){mean(x, na.rm = TRUE)})
std3 <- apply(boot_s, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_s))*100})
tab <- rbind(paste0(round(result1,3), '(', round(std1,3), ')'), paste0(round(result2,3), '(', round(std2,3), ')'),
paste0(round(result3,3), '(', round(std3,3), ')'))
# colnames(tab) <- c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
colnames(tab) <- c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
xtable(tab,
caption = 'The averaged subspace distance $\\bar{\\calD}$, the averaged rank $\\bar{d}$, the averaged sparsity $\\bar{s}$ and the corresponding standard error ($\\times 10^{-2}$) based on original samples and 100 bootstrap samples.',
align = rep('c', dim(tab)[2]+1))
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/output_pork-1')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/true_output_pork-1')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_nz <- lapply(output, '[[', 3)
boot_dist <- do.call(rbind, lapply(output, '[[', 4))
ord <- lapply(output, '[[', 5)
ord_est <- lapply(output, '[[', 6)
result1 <- apply(boot_dist, 2, function(x){mean(x, na.rm = TRUE)})
std1 <- apply(boot_dist, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_dist))*100})
result2 <- apply(boot_rank, 2, function(x){mean(x, na.rm = TRUE)})
std2 <- apply(boot_rank, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_rank))*100})
result3 <- apply(boot_s, 2, function(x){mean(x, na.rm = TRUE)})
std3 <- apply(boot_s, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_s))*100})
tab <- rbind(paste0(round(result1,3), '(', round(std1,3), ')'), paste0(round(result2,3), '(', round(std2,3), ')'),
paste0(round(result3,3), '(', round(std3,3), ')'))
# colnames(tab) <- c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
colnames(tab) <- c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
xtable(tab,
caption = 'The averaged subspace distance $\\bar{\\calD}$, the averaged rank $\\bar{d}$, the averaged sparsity $\\bar{s}$ and the corresponding standard error ($\\times 10^{-2}$) based on original samples and 100 bootstrap samples.',
align = rep('c', dim(tab)[2]+1))
debugSource('~/Documents/GitHub/ssdr/R_rd/NIR_meat_cont2.R')
library(latex2exp)
new_sir <- x %*% directions_sir
new_intra <- x %*% directions_intra
new_pfc <- x %*% directions_pfc
new_lassosir <- x %*% directions_lassosir
i <- 1
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
labs(title="Response versus the first component")+
# labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
i <- 2
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_2^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
# labs(title="Response versus the first component")+
labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
new_intra <- -new_intra
new_pfc <- -new_pfc
i <- 1
data <- data.frame(x = rbind(new_sir[,i,drop=FALSE], new_intra[,i,drop=FALSE], new_pfc[,i,drop=FALSE], new_lassosir[,i,drop=FALSE]),
y = rep(y, 4),
class = factor(c(rep("SEAS_SIR", nrow(x)), rep("SEAS-intra", nrow(x)), rep("SEAS-PFC", nrow(x)), rep("Lasso-SIR", nrow(x))), levels = c("SEAS_SIR", "SEAS-intra", "SEAS-PFC", "Lasso-SIR")))
g <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~class, nrow = 2, ncol = 2, shrink = FALSE, scales = "free_x") +
xlab(TeX('$\\beta_1^T\\mathbf{X}$')) +
ylab(TeX('$\\mathbf{Y}$'))+
theme_bw()+
labs(title="Response versus the first component")+
# labs(title="Response versus the second component")+
theme(plot.title = element_text(size = 16))
g
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/output-1')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/true_output-1')
library(xtable)
library(ggplot2)
library(pracma)
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_nz <- lapply(output, '[[', 3)
boot_dist <- do.call(rbind, lapply(output, '[[', 4))
ord <- lapply(output, '[[', 5)
ord_est <- lapply(output, '[[', 6)
result1 <- apply(boot_dist, 2, function(x){mean(x, na.rm = TRUE)})
std1 <- apply(boot_dist, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_dist))*100})
result2 <- apply(boot_rank, 2, function(x){mean(x, na.rm = TRUE)})
std2 <- apply(boot_rank, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_rank))*100})
result3 <- apply(boot_s, 2, function(x){mean(x, na.rm = TRUE)})
std3 <- apply(boot_s, 2, function(x){sd(x, na.rm = TRUE)/sqrt(nrow(boot_s))*100})
tab <- rbind(paste0(round(result1,3), '(', round(std1,3), ')'), paste0(round(result2,3), '(', round(std2,3), ')'),
paste0(round(result3,3), '(', round(std3,3), ')'))
colnames(tab) <- c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
# colnames(tab) <- c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
xtable(tab,
caption = 'The averaged subspace distance $\\bar{\\calD}$, the averaged rank $\\bar{d}$, the averaged sparsity $\\bar{s}$ and the corresponding standard error ($\\times 10^{-2}$) based on original samples and 100 bootstrap samples.',
align = rep('c', dim(tab)[2]+1))
debugSource('~/Documents/GitHub/ssdr/R_rd/NIR_meat2.R')
#############################################################################################
# Appearance frequency plot & cumulative frequency plot
#####################################.########################################################
library(latex2exp)
# 1. Top 10 selected variables
titles = c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
# titles = c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
true_nz <- true_output[[3]]
hist_plot <- function(x, y, title){
if(!is.factor(y)){y <- factor(y)}
if(!is.null(dim(x))){x <- drop(x)}
df <- data.frame(component = x, Type = y)
means <- sapply(unique(df$Type), function(i){
mean(df$component[df$Type==i])
})
means_df <- data.frame(means = means, Type=unique(df$Type))
g <- ggplot(df, aes(x=component, color = Type, fill=Type)) +
# geom_histogram(aes(y=..density..), bins = 50, position = 'identity', alpha=0.5) +
geom_density(alpha=0.3) +
geom_vline(data = means_df, aes(xintercept=means, color=Type), linetype='dashed')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
)+
scale_fill_grey(end = 0.7)+
scale_colour_grey(end = 0.7)+
theme_bw()+
labs(title = title)
g
}
x_new <- as.matrix(x) %*% directions_sir
levels(y) <- c("Pork", "Beef")
hist_plot(x_new, y, 'SEAS-SIR')
x_new_lassosir <- as.matrix(x) %*% directions_lassosir
hist_plot(x_new_lassosir, y, 'Lasso-SIR')
x_new_lassosir <- -x_new_lassosir
hist_plot(x_new_lassosir, y, 'Lasso-SIR')
x_new_lasso <- as.matrix(x) %*% directions_lasso
hist_plot(x_new_lasso, y, 'Lasso')
x_new_lasso <- -x_new_lasso
hist_plot(x_new_lasso, y, 'Lasso')
x_new_rifle <- as.matrix(x) %*% directions_rifle
hist_plot(x_new_rifle, y, 'Rifle-SIR')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/output_pork-1')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/true_output_pork-1')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_nz <- lapply(output, '[[', 3)
boot_dist <- do.call(rbind, lapply(output, '[[', 4))
#############################################################################################
# Appearance frequency plot & cumulative frequency plot
#####################################.########################################################
library(latex2exp)
# 1. Top 10 selected variables
# titles = c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
titles = c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
true_nz <- true_output[[3]]
# true_nz <- true_output[[5]]
for (k in 1:4){
true <- true_nz[[k]]
nz <- lapply(boot_nz, '[[', k)
# tot <- 103
tot <- 102
# tot <- 100
# nz <- lapply(ord_est, '[[', k)
cst <- mean(sapply(nz, function(x){
if (!is.numeric(x)){
FALSE
}else{
# SMS
1-(length(union(true, x)) - length(intersect(true, x)))/tot
}
})) * 100
cst <- round(cst, digits = 3)
tab <- sort(table(do.call(c, nz)), decreasing = TRUE)
name <- as.integer(names(tab))
# Select the top 10
freq <- as.vector(tab[1:min(10,length(tab))]/length(nz) * 100)
name <- name[1:min(10,length(name))]
g <- ggplot(data.frame(x=1:length(name), y=freq), aes(x=x, y=y, group=1))+
geom_line()+
geom_point(size=1)+
ylim(c(0,100))+
scale_x_continuous(breaks = 1:length(name), labels = name)+
xlab('variable index')+
ylab('Appearance frequency (%)')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
)+
labs(title = TeX(paste0(titles[k],' ($\\bar{\\mathrm{SMC}}$ = ', signif(cst,3), '%)')))
print(g)
}
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/output-1')
load('~/Documents/DIS/Record/2019/Nov2_2019/NIR/true_output-1')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_nz <- lapply(output, '[[', 3)
boot_dist <- do.call(rbind, lapply(output, '[[', 4))
#############################################################################################
# Appearance frequency plot & cumulative frequency plot
#####################################.########################################################
library(latex2exp)
# 1. Top 10 selected variables
titles = c('SEAS-SIR', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
# titles = c('SEAS-SIR', 'SEAS-Intra', 'SEAS-PFC', 'Lasso-SIR')
true_nz <- true_output[[3]]
# true_nz <- true_output[[5]]
for (k in 1:4){
true <- true_nz[[k]]
nz <- lapply(boot_nz, '[[', k)
tot <- 103
# tot <- 102
# tot <- 100
# nz <- lapply(ord_est, '[[', k)
cst <- mean(sapply(nz, function(x){
if (!is.numeric(x)){
FALSE
}else{
# SMS
1-(length(union(true, x)) - length(intersect(true, x)))/tot
}
})) * 100
cst <- round(cst, digits = 3)
tab <- sort(table(do.call(c, nz)), decreasing = TRUE)
name <- as.integer(names(tab))
# Select the top 10
freq <- as.vector(tab[1:min(10,length(tab))]/length(nz) * 100)
name <- name[1:min(10,length(name))]
g <- ggplot(data.frame(x=1:length(name), y=freq), aes(x=x, y=y, group=1))+
geom_line()+
geom_point(size=1)+
ylim(c(0,100))+
scale_x_continuous(breaks = 1:length(name), labels = name)+
xlab('variable index')+
ylab('Appearance frequency (%)')+
theme(
plot.title = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
)+
labs(title = TeX(paste0(titles[k],' ($\\bar{\\mathrm{SMC}}$ = ', signif(cst,3), '%)')))
print(g)
}
