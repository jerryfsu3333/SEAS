err_lassosir <- NA
}else{
directions_lassosir <- fit_lassosir$beta
new_train <- train_x %*% directions_lassosir
new_test <- test_x %*% directions_lassosir
err_lassosir <- err_func(new_train, train_y, new_test, test_y)
}
err_lassosir
err_sir
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
directions_sir
directions_sir[1:10]
directions_sir[1:10,]
err_sir
fit_lassosir <- LassoSIR(train_x, train_y, H = 5, nfolds = 5, choosing.d = 'automatic')
directions_lassosir <- fit_lassosir$beta
new_train <- train_x %*% directions_lassosir
new_test <- test_x %*% directions_lassosir
err_lassosir <- err_func(new_train, train_y, new_test, test_y)
err_lassosir
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
err_sir
fit_intra <- ssdr.cv(train_x, train_y, lam1_fac = seq(2.5,1.2, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'intra')
d_intra <- fit_intra$rank
directions_intra <- fit_intra$Beta
new_train <- train_x %*% directions_intra
new_test <- test_x %*% directions_intra
err_intra <- err_func(new_train, train_y, new_test, test_y)
err_intra
err_sir
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
do.call(rbind, lapply(err_list, '[[', 1))
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
View(directions_sir)
err_sir
seq(1.5,0.2, length.out = 10)
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
err_sir
fit_lassosir <- LassoSIR(train_x, train_y, H = 5, nfolds = 5, choosing.d = 'automatic')
if(!is.numeric(fit_lassosir$beta)){
warning('A NULL matrix is returned in time ', i, ' (lassosir).')
err_lassosir <- NA
}else{
directions_lassosir <- fit_lassosir$beta
new_train <- train_x %*% directions_lassosir
new_test <- test_x %*% directions_lassosir
err_lassosir <- err_func(new_train, train_y, new_test, test_y)
}
err_lassosir
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
# fit_intra <- ssdr.cv(train_x, train_y, lam1_fac = seq(2.5,1.2, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'intra')
fit_intra <- ssdr.cv(train_x, train_y, lam1_fac = seq(1.5,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'intra')
fit_intra$Beta
d_intra <- fit_intra$rank
directions_intra <- fit_intra$Beta
new_train <- train_x %*% directions_intra
new_test <- test_x %*% directions_intra
err_intra <- err_func(new_train, train_y, new_test, test_y)
err_intra
fit_pfc <- ssdr.cv(train_x, train_y, lam1_fac = seq(1.6,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = 1, type = 'pfc', nfolds = 3, cut_y = TRUE, maxit_outer = 1e+4)
fit_pfc$Beta
d_pfc <- fit_pfc$rank
directions_pfc <- fit_pfc$Beta
new_train <- train_x %*% directions_pfc
new_test <- test_x %*% directions_pfc
err_pfc <- err_func(new_train, train_y, new_test, test_y)
err_pfc
fit_lassosir <- LassoSIR(train_x, train_y, H = 5, nfolds = 5, choosing.d = 'automatic')
directions_lassosir <- fit_lassosir$beta
new_train <- train_x %*% directions_lassosir
new_test <- test_x %*% directions_lassosir
err_lassosir <- err_func(new_train, train_y, new_test, test_y)
err_lassosir
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
do.call(rbind, lapply(err_list, '[[', i))
do.call(rbind, lapply(err_list, '[[', 1))
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
data <- readMat('~/Documents/GitHub/ssdr/Real_dataset/NIR.mat')$data
data
# Pork (y=1) only
data <- data[data[,1] == 1]
data <- readMat('~/Documents/GitHub/ssdr/Real_dataset/NIR.mat')$data
# Pork (y=1) only
data <- data[data[,1] == 1,]
dim(data)
# import dataset
y <- data[,2]
x <- data[,-c(1,2)]
dist_cor <- sapply(seq_len(dim(x)[2]), function(i){
dcor(y, x[,i])
})
dist_cor
# x <- data[,-(1:5)]
y <- scale(y)
x <- scale(x)
sort(dist_cor, decreasing = TRUE)[1:10]
order(dist_cor, decreasing = TRUE)
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
do.call(rbind, lapply(err_list, '[[', 3))
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
y
x
dim(x)
seq(2,0.2, length.out = 10)
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
seq(2,0.2, length.out = 10)
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
fit_intra <- ssdr.cv(x, y, lam1_fac = seq(2,0.2, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'intra')
seq(2,0.2, length.out = 10)
fit_intra <- ssdr.cv(x, y, lam1_fac = seq(2,0.5, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'intra')
d_intra <- fit_intra$rank
directions_intra <- svd(fit_intra$Beta)$u[,1:d_intra, drop=FALSE]
nz_intra <- nz_func(directions_intra)
if(length(nz_intra)==1 && is.na(nz_intra[1])){
s_intra <- NA
}else{
s_intra <- length(nz_intra)
}
source('~/Documents/GitHub/ssdr/utility.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
fit_intra <- ssdr.cv(x, y, lam1_fac = seq(2,0.5, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'intra')
d_intra <- fit_intra$rank
directions_intra <- svd(fit_intra$Beta)$u[,1:d_intra, drop=FALSE]
nz_intra <- nz_func(directions_intra)
fit_pfc <- ssdr.cv(x, y, lam1_fac = seq(1.5,0.2, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4)
d_pfc <- fit_pfc$rank
directions_pfc <- svd(fit_pfc$Beta)$u[,1:d_pfc, drop=FALSE]
nz_pfc <- nz_func(directions_pfc)
fit_pfc <- ssdr.cv(x, y, lam1_fac = seq(2,0.5, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4)
d_pfc <- fit_pfc$rank
directions_pfc <- svd(fit_pfc$Beta)$u[,1:d_pfc, drop=FALSE]
nz_pfc <- nz_func(directions_pfc)
fit_pfc <- ssdr.cv(x, y, lam1_fac = seq(1.5,0.4, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4)
d_pfc <- fit_pfc$rank
directions_pfc <- svd(fit_pfc$Beta)$u[,1:d_pfc, drop=FALSE]
nz_pfc <- nz_func(directions_pfc)
fit_pfc <- ssdr.cv(x, y, lam1_fac = seq(1.5,0.3, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4)
d_lassosir <- fit_lassosir$no.dim
d_pfc <- fit_pfc$rank
directions_pfc <- svd(fit_pfc$Beta)$u[,1:d_pfc, drop=FALSE]
nz_pfc <- nz_func(directions_pfc)
fit_pfc <- ssdr.cv(x, y, lam1_fac = seq(1.5,0.2, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4)
d_pfc <- fit_pfc$rank
directions_pfc <- svd(fit_pfc$Beta)$u[,1:d_pfc, drop=FALSE]
nz_pfc <- nz_func(directions_pfc)
fit_lassosir <- LassoSIR(x, y, H = 5, nfolds = 5, choosing.d = 'automatic')
d_lassosir <- fit_lassosir$no.dim
directions_lassosir <- fit_lassosir$beta
nz_lassosir <- nz_func(directions_lassosir)
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
output[[1]]
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
output
boot_rank
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/true_output')
true_output
true_output$rank
true_output$s
svd(NA)
svd(NULL)
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
output[[1]]
output[[2]]
output[[3]]
output[[4]]
output[[5]]
output[[5]]
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err_list
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
boot_s
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_dist
colMeans(boot_dist, na.rm = TRUE)
boot_nz <- lapply(output, '[[', 4)
for (k in 1:4){
nz <- lapply(boot_nz, '[[', k)
# nz <- lapply(ord_est, '[[', k)
# nz <- ord
tab <- sort(table(do.call(c, nz)), decreasing = TRUE)
# tab
name <- as.integer(names(tab))
freq <- sapply(seq_len(length(name)), function(i){
ind <- name[1:i]
num <- mean(sapply(nz, function(x){
all(ind %in% x)
})) * 100
})
# select larger than 10%
name <- name[freq > 10]
freq <- freq[freq > 10]
g <- ggplot(data.frame(x=1:length(name), y=freq), aes(x=x, y=y, group = 1))+
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:length(name), labels = name)+
xlab('variable index')+
ylab('Appearance percentage (%)')+
labs(title = titles[k])
print(g)
}
titles = c('SSDR-SIR', 'SSDR-intra', 'SSDR-PFC', 'Lasso-SIR')
# for (k in 1:6){
for (k in 1:4){
nz <- lapply(boot_nz, '[[', k)
# nz <- lapply(ord_est, '[[', k)
# nz <- ord
tab <- sort(table(do.call(c, nz)), decreasing = TRUE)
# tab
name <- as.integer(names(tab))
freq <- sapply(seq_len(length(name)), function(i){
ind <- name[1:i]
num <- mean(sapply(nz, function(x){
all(ind %in% x)
})) * 100
})
# select larger than 10%
name <- name[freq > 10]
freq <- freq[freq > 10]
g <- ggplot(data.frame(x=1:length(name), y=freq), aes(x=x, y=y, group = 1))+
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:length(name), labels = name)+
xlab('variable index')+
ylab('Appearance percentage (%)')+
labs(title = titles[k])
print(g)
}
colMeans(boot_rank, na.rm = TRUE)
colMeans(boot_s, na.rm = TRUE)
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
any(NA)
if(NA)
dd
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
er
err
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
err
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_rank
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_rank
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
do.call(rbind, lapply(err_list, '[[', 1))
dat<-scan("~/Documents/GitHub/ssdr/Real_dataset/blood.txt")
x<- matrix(dat,ncol=71)
dim(x)
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
err
cat(err)
options(digits = 4)
err
debugSource('~/Documents/GitHub/ssdr/ssdr_sir_save.R')
maxit_outer
debugSource('~/Documents/GitHub/ssdr/ssdr_cv.R')
debugSource('~/Documents/GitHub/ssdr/ssdr_cv.R')
maxit_outer
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
fit_1$lambda
pmax
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
fit_sir <- ssdr.cv(x, y, lam1_fac = seq(1.5,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'sir', pmax = 600)
fit_sir <- ssdr.cv(x, y, lam1_fac = seq(1.5,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'sir', pmax = 500)
fit_sir <- ssdr.cv(x, y, lam1_fac = seq(1.5,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'sir', pmax = 400)
debugSource('~/Documents/GitHub/ssdr/Malaria.R')
fit_intra <- ssdr.cv(x, y, lam1_fac = seq(1.5,1, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10), gamma = c(1,2), nfolds = 3, type = 'intra', pmax = 400)
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
boot_s
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
boot_s
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_dist
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
dim(x)
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
pmax
(pmax * nk * nlam
)
double(pmax * nk * nlam)
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
pmax
dfmax
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
fit_pfc <- ssdr.cv(x, y, lambda.factor = 0.7, lam1_fac = seq(1.5,0.5, length.out = 10), lam2_fac = seq(0.001,0.2, length.out = 10),
gamma = c(1,2,3), nfolds = 3, type = 'pfc', cut_y = TRUE, maxit_outer = 1e+4, pmax=100)
debugSource('~/Documents/GitHub/ssdr/Rdata_NIR_meat_cont.R')
debugSource('~/Documents/FSU/Courses Materials/Niu3/Hw1/Hw1.R')
solve(fisher)
qnorm(0.975)
qnorm(0.025)
ans1
ans1 - sqrt(diag(solve(fisher))) * qnorm(0.975)
diag(solve(fisher))
sqrt(diag(solve(fisher)))
sqrt(diag(solve(fisher))) * qnorm(0.975)
# Lower bound and upper bound
LB <- ans1 - sqrt(diag(solve(fisher))) * qnorm(0.975)
UB <- ans1 - sqrt(diag(solve(fisher))) * qnorm(0.975)
LB
UB
UB <- ans1 + sqrt(diag(solve(fisher))) * qnorm(0.975)
UB
ans1
debugSource('~/Documents/FSU/Courses Materials/Niu3/Hw1/Hw1.R')
debugSource('~/Documents/FSU/Courses Materials/Niu3/Hw1/Hw1.R')
ans1
LB
UB
debugSource('~/Documents/FSU/Courses Materials/Niu3/Hw1/Hw1.R')
ans1
qnorm(0.975)
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
colnames(err) <- c('SSDR-SIR', 'SSDR-intra', 'SSDR-PFC', 'Lasso-SIR')
for(i in 1:3){
cat(err[i,], '\n', sep = '&')
}
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
output[[1]]
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_dist
boot_rank
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_rank
boot_s
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
err
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
colnames(err) <- c('SSDR-SIR', 'SSDR-intra', 'SSDR-PFC', 'Lasso-SIR')
for(i in 1:3){
cat(err[i,], '\n', sep = '&')
}
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/output')
output
setwd('~/Documents/GitHub/ssdr/')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3)s)
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_rank
boot_s
boot_dist
output
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/output-1')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_rank
boot_s
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_s
boot_dist
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list')
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
do.call(rbind, lapply(err_list, '[[', 4))
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
err <- sapply(1:4, function(i){
err <- do.call(rbind, lapply(err_list, '[[', i))
colMeans(err, na.rm = TRUE)
})
# colnames(err) <- c('SSDR-SIR', 'SSDR-intra', 'SSDR-PFC', 'Lasso-SIR', 'Lasso', 'Rifle-SIR')
colnames(err) <- c('SSDR-SIR', 'SSDR-intra', 'SSDR-PFC', 'Lasso-SIR')
for(i in 1:3){
cat(err[i,], '\n', sep = '&')
}
load('~/Documents/DIS/Record/2019/Sep9_2019/Malaria/err_list-1')
do.call(rbind, lapply(err_list, '[[', 1))
do.call(rbind, lapply(err_list, '[[', 2))
do.call(rbind, lapply(err_list, '[[', 3))
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list-1')
err_list
quantile.default(as.numeric(c(1,2,3,)), c(0.25, 0.75))
quantile(as.numeric(c(1,2,3)), c(0.25, 0.75))
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_dist <- do.call(rbind, lapply(output, '[[', 3))
boot_nz <- lapply(output, '[[', 4)
boot_rank
boot_s
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list')
err_list
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output3')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
load('~/Documents/DIS/Record/2019/Sep9_2019/NIR_meat/output4')
boot_rank <- do.call(rbind, lapply(output, '[[', 1))
boot_s <- do.call(rbind, lapply(output, '[[', 2))
boot_rank
boot_s
load('~/Documents/DIS/Record/2019/Sep9_2019/GSE5680/err_list')
err_list
